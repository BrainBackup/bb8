# docker-compose.yml file

version: '3.6'

services:
  server:
    build: ./server
    volumes:
      - type: bind
        source: ./server/
        target: /usr/app
    depends_on:
      - elasticsearch
    links: 
      - elasticsearch
    ports:
      - 3009:3009
    command: npm run install_and_run
  auth_service:
    build: ./auth-service
    volumes:
      - type: bind
        source: ./auth-service/
        target: /usr/app
    depends_on:
      - elasticsearch
    links: 
      - elasticsearch
    ports:
      - 3010:3010
    command: npm run install_and_run
    # entrypoint:
    #   - npm
    #   - run
    #   - install_and_run 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    environment:
      - discovery.type=single-node
    ports:
      - 9300:9300
      - 9200:9200

# version: '3.6'
# services:
#   server:
#     build: 
#     context: ./server
#       dockerfile: ./server/Dockerfile
#       command: npm run start
#       links:
#           - elasticsearch
#       depends_on:
#           - elasticsearch
#       networks: 
#         - esnet
#   elasticsearch:
#     container_name: tqd-elasticsearch
#     image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
#     volumes:
#       - esdata:/usr/share/elasticsearch/data
#     environment:
#       - bootstrap.memory_lock=true
#       - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#       - discovery.type=single-node
#     logging:
#       driver: none
    # ports:
    #   - 9300:9300
    #   - 9200:9200
#     networks: 
#       - esnet
# volumes:
#   esdata:
# networks:
#   esnet: